import type { CommandModule, Argv } from 'yargs';
import chalk from 'chalk';
import inquirer from 'inquirer';
import fs from 'fs';
import path from 'path';
import { generateGitignoreContent, generateReadmeContent } from '@stackcode/core';
import { t } from '@stackcode/i18n';

export const generateCommand: CommandModule = {
    command: 'generate <filetype>',
    describe: 'Generate common project files.',
    builder: (yargs: Argv) => {
        return yargs
            .command(
                'gitignore',
                'Generates a .gitignore file for Node.js projects.',
                {},
                async () => {
                    const gitignorePath = path.join(process.cwd(), '.gitignore');
                    if (fs.existsSync(gitignorePath)) {
                        console.log(chalk.yellow(t('generate.error.gitignore_exists')));
                        return;
                    }
                    const content = generateGitignoreContent('node');
                    fs.writeFileSync(gitignorePath, content);
                    console.log(chalk.green.bold(t('generate.success.gitignore')));
                }
            )
            .command(
                'readme',
                'Generates a rich README.md template file.',
                {},
                async () => {
                    const readmePath = path.join(process.cwd(), 'README.md');
                    if (fs.existsSync(readmePath)) {
                        const { overwrite } = await inquirer.prompt([{
                            type: 'confirm',
                            name: 'overwrite',
                            message: t('generate.prompt.readme_overwrite'),
                            default: false,
                        }]);
                        if (!overwrite) {
                            console.log(chalk.yellow(t('common.operation_cancelled')));
                            return;
                        }
                    }
                    const content = generateReadmeContent({
                        projectName: 'New Project',
                        description: 'A project generated by StackCode.',
                        authorName: 'Author'
                    });
                    fs.writeFileSync(readmePath, content);
                    console.log(chalk.green.bold(t('generate.success.readme')));
                }
            );
    },
    handler: () => {
        console.log(chalk.yellow(t('generate.error.specify_file_type')));
    }
};