"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateCommand = void 0;
const chalk_1 = __importDefault(require("chalk"));
const inquirer_1 = __importDefault(require("inquirer"));
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const core_1 = require("@stackcode/core");
exports.generateCommand = {
    command: 'generate <filetype>',
    describe: 'Generate common project files.',
    builder: (yargs) => {
        return yargs
            .command('gitignore', 'Generates a .gitignore file for Node.js projects.', {}, async () => {
            const gitignorePath = path_1.default.join(process.cwd(), '.gitignore');
            if (fs_1.default.existsSync(gitignorePath)) {
                console.log(chalk_1.default.yellow('A .gitignore file already exists. Operation cancelled to avoid overwriting.'));
                return;
            }
            const content = (0, core_1.generateGitignoreContent)('node');
            fs_1.default.writeFileSync(gitignorePath, content);
            console.log(chalk_1.default.green.bold('✔ Success! .gitignore file generated.'));
        })
            .command('readme', 'Generates a rich README.md template file.', {}, async () => {
            const readmePath = path_1.default.join(process.cwd(), 'README.md');
            if (fs_1.default.existsSync(readmePath)) {
                const { overwrite } = await inquirer_1.default.prompt([{
                        type: 'confirm',
                        name: 'overwrite',
                        message: 'A README.md file already exists. Do you want to overwrite it?',
                        default: false,
                    }]);
                if (!overwrite) {
                    console.log(chalk_1.default.yellow('Operation cancelled.'));
                    return;
                }
            }
            const content = (0, core_1.generateReadmeContent)({
                projectName: 'New Project',
                description: 'A project generated by StackCode.',
                authorName: 'Author'
            });
            fs_1.default.writeFileSync(readmePath, content);
            console.log(chalk_1.default.green.bold('✔ Success! README.md template generated.'));
        });
    },
    handler: () => {
        console.log(chalk_1.default.yellow('Please specify a file type to generate (e.g., gitignore, readme).'));
    }
};
